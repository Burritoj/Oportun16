[{"/mnt/c/Users/bulle/CSE120/Opportun/client/src/index.js":"1","/mnt/c/Users/bulle/CSE120/Opportun/client/src/App.js":"2","/mnt/c/Users/bulle/CSE120/Opportun/client/src/components/Navbar/index.jsx":"3","/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page3.jsx":"4","/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page4.jsx":"5","/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page2.jsx":"6","/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page5.jsx":"7","/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page1.jsx":"8","/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/delete.js":"9","/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/update.js":"10","/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/ToolCalcs.js":"11","/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/submit.js":"12"},{"size":180,"mtime":1606853506143,"results":"13","hashOfConfig":"14"},{"size":815,"mtime":1606954654954,"results":"15","hashOfConfig":"14"},{"size":1932,"mtime":1606958022517,"results":"16","hashOfConfig":"14"},{"size":1608,"mtime":1606954654960,"results":"17","hashOfConfig":"14"},{"size":5736,"mtime":1606954654966,"results":"18","hashOfConfig":"14"},{"size":7326,"mtime":1606956305115,"results":"19","hashOfConfig":"14"},{"size":24214,"mtime":1606954654972,"results":"20","hashOfConfig":"14"},{"size":55509,"mtime":1606958883154,"results":"21","hashOfConfig":"14"},{"size":299,"mtime":1606954654997,"results":"22","hashOfConfig":"14"},{"size":305,"mtime":1606954655007,"results":"23","hashOfConfig":"14"},{"size":11990,"mtime":1606956520765,"results":"24","hashOfConfig":"14"},{"size":317,"mtime":1606954655002,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tg2dch",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/mnt/c/Users/bulle/CSE120/Opportun/client/src/index.js",[],["53","54"],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/App.js",[],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/components/Navbar/index.jsx",[],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page3.jsx",["55","56"],"import React, { useState } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport function Page3(props){\r\n\r\n  const {active, dbCacheArray} = props;\r\n  let numVeryHighInherentOR = 0;\r\n\r\n  for(let j=0; j<getTotalDocs(dbCacheArray); j++){\r\n    if(dbCacheArray[j].data[2] === 4){\r\n      numVeryHighInherentOR += 1;\r\n    };\r\n  }\r\n\r\n  console.log(numVeryHighInherentOR);\r\n\r\n  return(\r\n    <div hidden={!active}>\r\n      <Container>\r\n        <Row>\r\n          <Col><Button variant=\"primary\" onClick={()=>xRecent(dbCacheArray,5)}>xRecent</Button>{' '}\r\n          <Button variant=\"primary\" onClick={()=>getTotalDocs(dbCacheArray)}>Total Docs</Button>{' '}</Col>\r\n          <Col lg = {8}> HEAT MAP</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Button variant=\"primary\">button</Button>{' '}\r\n          </Col>\r\n          <Col lg={8}>HEAT MAP</Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction xRecent(arr, x){\r\n  const newArr = [];\r\n  for(let i=arr.length-1; i>=(arr.length-5); i--){\r\n    newArr.push(arr[i]);\r\n  }\r\n  console.log(newArr);\r\n  return newArr;\r\n}\r\n\r\nfunction getTotalDocs(arr){\r\n  console.log(arr.length);\r\n  return arr.length;\r\n}\r\n\r\nfunction monthlyChangePRInherent(arr){\r\n  let thisMonthAvg = 0;\r\n  let lastMonthAvg = 0;\r\n  let difference = 0;\r\n  //for loop check every date until we leave this month\r\n  //for loop check every date after ^^ until we leave the month before this month\r\n  //this month avg - [last month avg]\r\n  difference = thisMonthAvg - lastMonthAvg;\r\n  return difference;\r\n}","/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page4.jsx",[],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page2.jsx",["57","58"],"import React, { useState } from 'react'\r\nimport { FormControl, InputGroup, Container, Row, Col } from 'react-bootstrap'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Card from 'react-bootstrap/Card'\r\nimport {deleteEntry} from './utils/delete'\r\n\r\nexport function Page2(props){\r\n\r\n    const {active, dbCacheArray, setdbCacheArray, setActive, setEntryToUpdate} = props;\r\n\r\n    const [nameEntered, setNameEntered] = useState('');\r\n    const [date1, setDate1] = useState('');\r\n    const [date2, setDate2] = useState('');\r\n    const [categorySelected, setCategoryEntered] = useState('All');\r\n\r\n    const [hasFilteredDate, sethasFilteredDate] = useState(false);\r\n\r\n    const handleName = event => {\r\n        setNameEntered(event.target.value);\r\n    }\r\n\r\n    const handleDate1 = event => {\r\n        setDate1(event.target.value);\r\n    }\r\n\r\n    const handleDate2 = event => {\r\n        setDate2(event.target.value);\r\n    }\r\n\r\n    const handleCategory = event => {\r\n        setCategoryEntered(event.target.value);\r\n    }\r\n\r\n    const handleDelete = props => {\r\n        //delete entry from database\r\n        deleteEntry(props);\r\n        //delete entry from dbCacheArray\r\n        const temp = new Array(dbCacheArray.length);\r\n        let currentIndex = 0;\r\n        for(let i = 0; i < dbCacheArray.length; i++){\r\n            if(props._id !== dbCacheArray[i]._id){\r\n                temp[currentIndex] = dbCacheArray[i];\r\n                currentIndex++;\r\n            }\r\n        }\r\n        setdbCacheArray(temp.slice(0,dbCacheArray.length-1));\r\n    }\r\n\r\n    const handleEdit = event => {\r\n        setEntryToUpdate(event);\r\n        setActive(5);\r\n    }\r\n\r\n    const nameFilter = (document, nameEntered) => {\r\n        if(document.name.toLowerCase().includes(nameEntered.toLowerCase())){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const dateFilter = (document, date1, date2) => {\r\n        if(!hasFilteredDate){\r\n            return true;\r\n        }\r\n        else if(document.dateCreated >= date1 && document.dateCreated <= date2){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const categoryFilter = (document, categorySelected) => {\r\n        if(categorySelected === 'All' || document.category === (categorySelected)){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const DataRows = () => {\r\n        if(dbCacheArray.length === 0){\r\n            return(<p> \"No results\" </p>)\r\n        }\r\n        else{\r\n            const Rows = [];\r\n            let i = 0;\r\n            while (i < dbCacheArray.length){\r\n                if(nameFilter(dbCacheArray[i], nameEntered) === true &&\r\n                categoryFilter(dbCacheArray[i], categorySelected) === true &&\r\n                (dateFilter(dbCacheArray[i], date1, date2) === true)){\r\n                    Rows.push(<DataRow key={i} {...dbCacheArray[i]}/>);\r\n                }\r\n                i++;\r\n            }\r\n            Rows.length = 10;\r\n            return(<> {Rows} </>)\r\n        }\r\n    }\r\n\r\n    function DataRow(props){\r\n        const {name, dateCreated, category, data} = props;\r\n        return(\r\n            <Row style={{ height: '8vh' }}>\r\n                <Col>\r\n                    <Card style={{ width: '12rem', borderColor: 'white' }}>\r\n                        <Card.Body>\r\n                            <Card.Text style={{ textAlign: 'center' }}>\r\n                                {name}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card style={{ width: '12rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {dateCreated}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card style={{ width: '12rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {category}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Card style={{ width: '12rem' }}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                {data[0]}, {data[1]}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col>\r\n                    <Button variant=\"outline-success\" size='lg' onClick={()=>handleEdit(props)} block>\r\n                        View/Edit\r\n                    </Button>\r\n                </Col>\r\n                <Col style={{justifyContent: 'stretch'}}>\r\n                    <Button variant=\"outline-danger\" size='lg' onClick={()=>{if(window.confirm('Are you sure you want to delete?')) handleDelete(props)}} block>\r\n                        Delete\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    const [d2, setd2] = useState('');\r\n\r\n    const handleSelect2=(e)=>{\r\n        console.log(e);\r\n        setd2(e);\r\n    }\r\n\r\n    return(\r\n        <div hidden={!active}>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Group controlId=\"Name\">\r\n                                <Form.Control onChange={handleName} autoComplete=\"off\" type=\"NameSearch\" placeholder=\"Name\"/>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <InputGroup.Prepend>\r\n                            <InputGroup.Text>Dates</InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl onChange={(event)=>{handleDate1(event); sethasFilteredDate(false);}}/>\r\n                        <FormControl onChange={(event)=>{handleDate2(event); sethasFilteredDate(false);}}/>\r\n                        <InputGroup.Prepend>\r\n                            <Button variant=\"outline-secondary\" onClick={()=>sethasFilteredDate(true)}>Filter</Button>\r\n                        </InputGroup.Prepend>\r\n                    </InputGroup>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Group controlId=\"Category\">\r\n                                <Form.Control as=\"select\" onChange={handleCategory}>\r\n                                <option>All</option>\r\n                                <option>Availability</option>\r\n                                <option>Confidentiality</option>\r\n                                <option>Integrity</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n            <Container fluid>\r\n                <DataRows/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page5.jsx",[],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/Page1.jsx",["59","60","61","62","63","64"],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/delete.js",[],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/update.js",[],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/ToolCalcs.js",[],"/mnt/c/Users/bulle/CSE120/Opportun/client/src/utils/submit.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":51,"column":10,"nodeType":"71","messageId":"72","endLine":51,"endColumn":33},{"ruleId":"69","severity":1,"message":"74","line":159,"column":12,"nodeType":"71","messageId":"72","endLine":159,"endColumn":14},{"ruleId":"69","severity":1,"message":"75","line":161,"column":11,"nodeType":"71","messageId":"72","endLine":161,"endColumn":24},{"ruleId":"69","severity":1,"message":"76","line":213,"column":9,"nodeType":"71","messageId":"72","endLine":213,"endColumn":20},{"ruleId":"77","severity":1,"message":"78","line":214,"column":13,"nodeType":"79","messageId":"80","endLine":214,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":216,"column":21,"nodeType":"79","messageId":"80","endLine":216,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":218,"column":21,"nodeType":"79","messageId":"80","endLine":218,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":220,"column":21,"nodeType":"79","messageId":"80","endLine":220,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":222,"column":21,"nodeType":"79","messageId":"80","endLine":222,"endColumn":23},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'monthlyChangePRInherent' is defined but never used.","'d2' is assigned a value but never used.","'handleSelect2' is assigned a value but never used.","'handleColor' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]